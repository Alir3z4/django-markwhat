[build-system]
requires = ["setuptools>=61.2", "setuptools_scm[toml]>=3.4.3"]
build-backend = "setuptools.build_meta"

[project]
name = "django_markwhat"
description = "A collection of template filters that implement common markup languages."
readme = "README.md"
authors = [{name = "Alireza Savand", email = "alireza.savand@gmail.com"}]
license = "BSD-3-Clause"
classifiers = [
    "Development Status :: 5 - Production/Stable",
      "Development Status :: 6 - Mature",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
]
urls = {Homepage = "https://github.com/Alir3z4/django-markwhat/"}
requires-python = ">=3.9"
dynamic = ["version"]
dependencies = [
  "Django",
]

[project.optional-dependencies]
markdown = ["Markdown"]
textile = ["textile"]
commonmark = ["commonmark"]
rst = ["docutils"]
all = [
  "Markdown",
  "textile",
  "commonmark",
  "docutils",
]
dev = [
  "Markdown",
  "textile",
  "commonmark",
  "docutils",
  "coverage",
  "ruff",
  "mypy",
  "django-stubs",
]

[tool.setuptools]
zip-safe = false
packages = ["django_markwhat", "django_markwhat.templatetags"]
platforms = ["OS Independent"]
include-package-data = false

[tool.setuptools_scm]
write_to = "django_markwhat/_version.py"

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = ["ALL"]
fixable = ["ALL"]
ignore = [
    "DTZ007",
    "DTZ005",
    "DTZ001",
    "DTZ901",
    "D100",
    "D104",
    "D102",
    "D203",
    "D212",
    "D401",
    "T201",
    "PLR0912",
    "PT009",
    "COM812",
    "C901",
    "S308",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["SLF001", "D101"]


[tool.ruff.lint.isort]
known-third-party = ["todoo",]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.mypy]
python_version = "3.13"

[tool.coverage.run]
cover_pylib = false
omit = [
    "*site-packages*",
    "*distutils*",
    "venv/*",
    ".venv/*",
]

[tool.coverage.report]
precision = 3
show_missing = true
ignore_errors = true
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "def __str__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]
skip_covered = true